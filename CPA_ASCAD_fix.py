import numpy as np
from tqdm import tqdm
from matplotlib import pyplot as plt

if __name__ == '__main__':
	HWtable = np.load("ASCAD_fix_HWtable.npy") #Generated by makeHWtable_ASCAD_fix.py
	trace = np.load("ASCAD_fix_atk+pro_traces_norm.npy") #Attack(and profiling) traces of fixed_key_database. Attack traces come first. Normalized(the value is limited to [0,1]) for use in machine learning.
	corr = np.zeros((256, len(trace)), dtype=np.float32)

	for i in tqdm(range(256)):
		for j in range(len(trace)):
			corr[i][j] = np.corrcoef(HWtable[i, :j], trace[:j, 167])[0][1] #Calculate correlation coefficient for each key candidate. i denotes key candidate and j denotes number of traces.
		plt.plot(range(len(trace)), np.abs(corr[i]), color="lightgrey" if i!=224 else "red", zorder=1 if i!=224 else 256) #Plot the result of CPA. "224" is correct key value, so emphasized.

	plt.show()
